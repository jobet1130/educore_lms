version: '3.8'

# QA Environment - For quality assurance testing
services:
  web:
    container_name: educore_lms_web-qa
    build: .
    ports:
      - "8002:8000"
    env_file:
      - .env.qa
    environment:
      - DEBUG=${DEBUG:-0}
      - SECRET_KEY=${SECRET_KEY}
      - DATABASE_URL=${DATABASE_URL}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - ENVIRONMENT=${ENVIRONMENT:-qa}
      - DJANGO_LOG_LEVEL=${DJANGO_LOG_LEVEL:-INFO}
    volumes:
      - qa_static:/app/staticfiles
      - qa_media:/app/media
      - ./logs:/app/logs
    depends_on:
      - db
    restart: unless-stopped
    networks:
      - qa_network
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=${DB_NAME:-qa_db}
      - POSTGRES_USER=${DB_USER:-qa_user}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - qa_postgres:/var/lib/postgresql/data
      - ./backups:/backups
    ports:
      - "5434:5432"
    restart: unless-stopped
    networks:
      - qa_network
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U qa_user -d qa_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Test runner service for automated testing
  test-runner:
    build: .
    environment:
      - DEBUG=1
      - DATABASE_URL=postgres://qa_user:qa_password@db:5432/qa_test_db
    volumes:
      - .:/app
      - ./test-reports:/app/test-reports
    depends_on:
      - db
    networks:
      - qa_network
    profiles:
      - testing
    command: >
      sh -c "python manage.py test --keepdb --verbosity=2 &&
             python manage.py collectstatic --noinput"

volumes:
  qa_postgres:
  qa_static:
  qa_media:

networks:
  qa_network:
    driver: bridge